plugins {
    id 'com.github.johnrengelman.shadow' version '8.1.1' apply false
}


apply plugin: 'java-library'
apply plugin: 'com.github.johnrengelman.shadow'

sourceCompatibility = 11
targetCompatibility = 11

repositories {
    mavenCentral()
}

dependencies {

    implementation "org.finos.timebase-ce:timebase-client:${timebaseVersion}"
//    api "org.finos.timebase-ce:timebase-api:${timebaseVersion}"
//    api "org.finos.timebase-ce:timebase-pub:${timebaseVersion}"
//    api "org.finos.timebase-ce:timebase-aerondirect:${timebaseVersion}"
//
    implementation "com.epam.deltix:containers:3.1.2"

    implementation 'com.epam.deltix:dfp:1.0.3'
    implementation "com.epam.deltix:gflog-api:${gflogVersion}"

    implementation 'com.google.guava:guava:32.0.1-jre'

    testImplementation 'junit:junit:4.13.2'

    //testImplementation "org.testcontainers:testcontainers:1.17.6"

    //testImplementation ("org.springframework:spring-context:${springVersion}")
    //testImplementation ("org.springframework.boot:spring-boot-starter-test:${springBootVersion}")

    //testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.2'
}

//resolutionStrategy {
//    // Disable this line on case of version conflict and then run :dependency task OR execute build with --scan option
//    failOnVersionConflict()
//}

// ZIP with sample 
task makeZIP(type: Zip) {
    archiveFileName = 'deltix-timebase-tutorial'

    from('.') {
        include '**/*'
        exclude '.git/'
        exclude '.gradle/'
        exclude '.idea/libraries/'
        exclude '.idea/vcs.xml'
        exclude 'build/'
        exclude 'out/'
    }
}

def libDirectory = new File(projectDir, 'lib')

task copyLibs(type: Sync) {
    from configurations.runtimeClasspath
    from project.jar.outputs.files

    into libDirectory
}

test {
    useJUnitPlatform()
    jvmArgs '-Dgflog.sync=true', '-Dgflog.console.appender.wrap=true' // sync logging to not mix up messages from different tests
}

shadowJar {
    zip64 = true
}

test.onlyIf { Boolean.getBoolean('tests.run') }